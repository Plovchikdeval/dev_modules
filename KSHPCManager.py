# ___________________________________________
#/  _        _                         _     \
#| | | _____| |__  _ __ ___   ___   __| |___ |
#| | |/ / __| '_ \| '_ ` _ \ / _ \ / _` / __||
#| |   <\__ \ | | | | | | | | (_) | (_| \__ \|
#| |_|\_\___/_| |_|_| |_| |_|\___/ \__,_|___/|
#\___________________________________________/  

# meta developer: @kshmods
# license: GNU General Public License v3.0


from hikkatl.types import Message
from .. import loader, utils
import subprocess
import os
import platform
import logging
from typing import Optional

logger = logging.getLogger(__name__)

@loader.tds
class KSHPCManager(loader.Module):
    """–£–¥–∞–ª–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ü–ö —á–µ—Ä–µ–∑ Telegram"""
    strings = {
        "name": "KSHPCManager",
        "help": "<emoji document_id=5825579866610732647>üñ•</emoji> <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
                "‚Ä¢ <code>.shutdown</code> - –í—ã–∫–ª—é—á–∞–µ—Ç –ü–ö. (–Ω–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —Ö–æ—Å—Ç–µ)\n"
                "‚Ä¢ <code>.pcrestart</code> - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –ü–ö. (–Ω–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —Ö–æ—Å—Ç–µ)                                                                                                                                                                                                                                                       \n"
                "‚Ä¢ <code>.cmd [command]</code> - –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ.\n"
                "‚Ä¢ <code>.files [path]</code> - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.\n"
                "‚Ä¢ <code>.send [path]</code> - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª —Å —Ö–æ—Å—Ç–∞.\n"
                "‚Ä¢ <code>.pchelp</code> - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é.",
        "shutdown": "<emoji document_id=5825579866610732647>üñ•</emoji> –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∫–ª—é—á–∏—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å",
        "restart": "<emoji document_id=5845943483382110702>üîÑ</emoji> –ö–æ–º–ø—å—é—Ç–µ—Ä –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å",
        "cmd_result": "<emoji document_id=5960551395730919906>üìù</emoji> <b>–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥—ã:</b>\n<code>{}</code>",
        "files_list": "<emoji document_id=6039630677182254664>üìÇ</emoji> <b>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ {}:</b>\n\n<code>{}</code>",
        "file_sent": "<emoji document_id=6039630677182254664>üìÇ</emoji> –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω",
        "file_not_found": "<emoji document_id=5778527486270770928>‚ùå</emoji> –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω",
        "error": "<emoji document_id=5778527486270770928>‚ùå</emoji> –û—à–∏–±–∫–∞: {}"
    }

    def __init__(self):
        self.os_type = platform.system()
        self.screenshot_path = "telegram_screenshot.png"

    async def client_ready(self, client, db):
        self._client = client
        self._db = db

    async def pchelpcmd(self, message: Message):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –º–æ–¥—É–ª—è."""
        await utils.answer(message, self.strings["help"])

    async def shutdowncmd(self, message: Message):
        """–í—ã–∫–ª—é—á–∞–µ—Ç –ü–ö. ( –Ω–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —Ö–æ—Å—Ç–µ)"""
        try:
            os.system("shutdown")
            await utils.answer(message, self.strings["shutdown"])
        except Exception as e:
            await utils.answer(message, self.strings["error"].format(str(e)))

    async def pcrestartcmd(self, message: Message):
        """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –ü–ö. (–Ω–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —Ö–æ—Å—Ç–µ)                                                                                                                                                                                                                                                                                      """
        try:
            os.system("reboot")
            await utils.answer(message, self.strings["restart"])
        except Exception as e:
            await utils.answer(message, self.strings["error"].format(str(e)))

    async def cmdcmd(self, message: Message):
        """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"""
        command = utils.get_args_raw(message)
        if not command:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
            return

        try:
            result = subprocess.check_output(
                command,
                shell=True,
                stderr=subprocess.STDOUT,
                universal_newlines=True,
                timeout=60
            )
            await utils.answer(
                message,
                self.strings["cmd_result"].format(result[:4000])
            )
        except subprocess.CalledProcessError as e:
            await utils.answer(
                message,
                self.strings["error"].format(e.output[:4000])
            )
        except Exception as e:
            await utils.answer(message, self.strings["error"].format(str(e)))

    async def filescmd(self, message: Message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
        path = utils.get_args_raw(message) or "."
        try:
            files = "\n".join(os.listdir(path))
            await utils.answer(
                message,
                self.strings["files_list"].format(path, files[:4000])
            )
        except Exception as e:
            await utils.answer(message, self.strings["error"].format(str(e)))

    async def sendcmd(self, message: Message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª —Å —Ö–æ—Å—Ç–∞."""
        file_path = utils.get_args_raw(message)
        if not file_path:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É")
            return

        try:
            if os.path.exists(file_path):
                await self._client.send_file(
                    message.peer_id,
                    file_path,
                    caption=f"<emoji document_id=6039630677182254664>üìÇ</emoji> –§–∞–π–ª: {os.path.basename(file_path)}"
                )
                await utils.answer(message, self.strings["file_sent"])
            else:
                await utils.answer(message, self.strings["file_not_found"])
        except Exception as e:
            await utils.answer(message, self.strings["error"].format(str(e)))
